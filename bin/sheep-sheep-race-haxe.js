// Generated by Haxe 3.3.0
(function ($hx_exports, $global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var pixi_plugins_app_Application = function() {
	this._animationFrameId = null;
	this.pixelRatio = 1;
	this.set_skipFrame(false);
	this.autoResize = true;
	this.transparent = false;
	this.antialias = false;
	this.forceFXAA = false;
	this.roundPixels = false;
	this.clearBeforeRender = true;
	this.preserveDrawingBuffer = false;
	this.backgroundColor = 16777215;
	this.width = window.innerWidth;
	this.height = window.innerHeight;
	this.set_fps(60);
};
pixi_plugins_app_Application.__name__ = ["pixi","plugins","app","Application"];
pixi_plugins_app_Application.prototype = {
	set_fps: function(val) {
		this._frameCount = 0;
		return this.fps = val >= 1 && val < 60?val | 0:60;
	}
	,set_skipFrame: function(val) {
		if(val) {
			console.log("pixi.plugins.app.Application > Deprecated: skipFrame - use fps property and set it to 30 instead");
			this.set_fps(30);
		}
		return this.skipFrame = val;
	}
	,_setDefaultValues: function() {
		this._animationFrameId = null;
		this.pixelRatio = 1;
		this.set_skipFrame(false);
		this.autoResize = true;
		this.transparent = false;
		this.antialias = false;
		this.forceFXAA = false;
		this.roundPixels = false;
		this.clearBeforeRender = true;
		this.preserveDrawingBuffer = false;
		this.backgroundColor = 16777215;
		this.width = window.innerWidth;
		this.height = window.innerHeight;
		this.set_fps(60);
	}
	,start: function(rendererType,parentDom,canvasElement) {
		if(rendererType == null) {
			rendererType = "auto";
		}
		if(canvasElement == null) {
			this.canvas = window.document.createElement("canvas");
			this.canvas.style.width = this.width + "px";
			this.canvas.style.height = this.height + "px";
			this.canvas.style.position = "absolute";
		} else {
			this.canvas = canvasElement;
		}
		if(parentDom == null) {
			window.document.body.appendChild(this.canvas);
		} else {
			parentDom.appendChild(this.canvas);
		}
		this.stage = new PIXI.Container();
		var renderingOptions = { };
		renderingOptions.view = this.canvas;
		renderingOptions.backgroundColor = this.backgroundColor;
		renderingOptions.resolution = this.pixelRatio;
		renderingOptions.antialias = this.antialias;
		renderingOptions.forceFXAA = this.forceFXAA;
		renderingOptions.autoResize = this.autoResize;
		renderingOptions.transparent = this.transparent;
		renderingOptions.clearBeforeRender = this.clearBeforeRender;
		renderingOptions.preserveDrawingBuffer = this.preserveDrawingBuffer;
		if(rendererType == "auto") {
			this.renderer = PIXI.autoDetectRenderer(this.width,this.height,renderingOptions);
		} else if(rendererType == "canvas") {
			this.renderer = new PIXI.CanvasRenderer(this.width,this.height,renderingOptions);
		} else {
			this.renderer = new PIXI.WebGLRenderer(this.width,this.height,renderingOptions);
		}
		if(this.roundPixels) {
			this.renderer.roundPixels = true;
		}
		if(parentDom == null) {
			window.document.body.appendChild(this.renderer.view);
		} else {
			parentDom.appendChild(this.renderer.view);
		}
		this.resumeRendering();
	}
	,pauseRendering: function() {
		window.onresize = null;
		if(this._animationFrameId != null) {
			window.cancelAnimationFrame(this._animationFrameId);
			this._animationFrameId = null;
		}
	}
	,resumeRendering: function() {
		if(this.autoResize) {
			window.onresize = $bind(this,this._onWindowResize);
		}
		if(this._animationFrameId == null) {
			this._animationFrameId = window.requestAnimationFrame($bind(this,this._onRequestAnimationFrame));
		}
	}
	,_onWindowResize: function(event) {
		this.width = window.innerWidth;
		this.height = window.innerHeight;
		this.renderer.resize(this.width,this.height);
		this.canvas.style.width = this.width + "px";
		this.canvas.style.height = this.height + "px";
		if(this.onResize != null) {
			this.onResize();
		}
	}
	,_onRequestAnimationFrame: function(elapsedTime) {
		this._frameCount++;
		if(this._frameCount == (60 / this.fps | 0)) {
			this._frameCount = 0;
			if(this.onUpdate != null) {
				this.onUpdate(elapsedTime);
			}
			this.renderer.render(this.stage);
		}
		this._animationFrameId = window.requestAnimationFrame($bind(this,this._onRequestAnimationFrame));
	}
	,addStats: function() {
		if(window.Perf != null) {
			new Perf().addInfo(["UNKNOWN","WEBGL","CANVAS"][this.renderer.type] + " - " + this.pixelRatio);
		}
	}
	,__class__: pixi_plugins_app_Application
};
var Main = function() {
	pixi_plugins_app_Application.call(this);
	this.init();
};
Main.__name__ = ["Main"];
Main.main = function() {
	new Main();
};
Main.__super__ = pixi_plugins_app_Application;
Main.prototype = $extend(pixi_plugins_app_Application.prototype,{
	init: function() {
		this.backgroundColor = 16777215;
		pixi_plugins_app_Application.prototype.start.call(this,"auto");
		var loader = new PIXI.loaders.Loader();
		loader.add("font","assets/fonts/setzer_pixel_font.xml");
		loader.add("mc","assets/atlas/sheep_spritesheet.json");
		loader.load($bind(this,this.onLoaded));
	}
	,onLoaded: function() {
		new sheep_sheep_race_setup_ContextConfig(this.stage);
	}
	,__class__: Main
});
Math.__name__ = ["Math"];
var Perf = $hx_exports["Perf"] = function(pos,offset) {
	if(offset == null) {
		offset = 0;
	}
	if(pos == null) {
		pos = "TR";
	}
	this._perfObj = window.performance;
	if(Reflect.field(this._perfObj,"memory") != null) {
		this._memoryObj = Reflect.field(this._perfObj,"memory");
	}
	this._memCheck = this._perfObj != null && this._memoryObj != null && this._memoryObj.totalJSHeapSize > 0;
	this._pos = pos;
	this._offset = offset;
	this.currentFps = 60;
	this.currentMs = 0;
	this.currentMem = "0";
	this.lowFps = 60;
	this.avgFps = 60;
	this._measureCount = 0;
	this._totalFps = 0;
	this._time = 0;
	this._ticks = 0;
	this._fpsMin = 60;
	this._fpsMax = 60;
	this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
	this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	this._createFpsDom();
	this._createMsDom();
	if(this._memCheck) {
		this._createMemoryDom();
	}
	if(($_=window,$bind($_,$_.requestAnimationFrame)) != null) {
		this.RAF = ($_=window,$bind($_,$_.requestAnimationFrame));
	} else if(window.mozRequestAnimationFrame != null) {
		this.RAF = window.mozRequestAnimationFrame;
	} else if(window.webkitRequestAnimationFrame != null) {
		this.RAF = window.webkitRequestAnimationFrame;
	} else if(window.msRequestAnimationFrame != null) {
		this.RAF = window.msRequestAnimationFrame;
	}
	if(($_=window,$bind($_,$_.cancelAnimationFrame)) != null) {
		this.CAF = ($_=window,$bind($_,$_.cancelAnimationFrame));
	} else if(window.mozCancelAnimationFrame != null) {
		this.CAF = window.mozCancelAnimationFrame;
	} else if(window.webkitCancelAnimationFrame != null) {
		this.CAF = window.webkitCancelAnimationFrame;
	} else if(window.msCancelAnimationFrame != null) {
		this.CAF = window.msCancelAnimationFrame;
	}
	if(this.RAF != null) {
		this._raf = this.RAF.apply(window,[$bind(this,this._tick)]);
	}
};
Perf.__name__ = ["Perf"];
Perf.prototype = {
	_init: function() {
		this.currentFps = 60;
		this.currentMs = 0;
		this.currentMem = "0";
		this.lowFps = 60;
		this.avgFps = 60;
		this._measureCount = 0;
		this._totalFps = 0;
		this._time = 0;
		this._ticks = 0;
		this._fpsMin = 60;
		this._fpsMax = 60;
		this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	}
	,_now: function() {
		if(this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null) {
			return this._perfObj.now();
		} else {
			return new Date().getTime();
		}
	}
	,_tick: function(val) {
		var time = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._ticks++;
		if(this._raf != null && time > this._prevTime + Perf.MEASUREMENT_INTERVAL) {
			this.currentMs = Math.round(time - this._startTime);
			this.ms.innerHTML = "MS: " + this.currentMs;
			this.currentFps = Math.round(this._ticks * 1000 / (time - this._prevTime));
			if(this.currentFps > 0 && val > Perf.DELAY_TIME) {
				this._measureCount++;
				this._totalFps += this.currentFps;
				this.lowFps = this._fpsMin = Math.min(this._fpsMin,this.currentFps);
				this._fpsMax = Math.max(this._fpsMax,this.currentFps);
				this.avgFps = Math.round(this._totalFps / this._measureCount);
			}
			this.fps.innerHTML = "FPS: " + this.currentFps + " (" + this._fpsMin + "-" + this._fpsMax + ")";
			if(this.currentFps >= 30) {
				this.fps.style.backgroundColor = Perf.FPS_BG_CLR;
			} else if(this.currentFps >= 15) {
				this.fps.style.backgroundColor = Perf.FPS_WARN_BG_CLR;
			} else {
				this.fps.style.backgroundColor = Perf.FPS_PROB_BG_CLR;
			}
			this._prevTime = time;
			this._ticks = 0;
			if(this._memCheck) {
				this.currentMem = this._getFormattedSize(this._memoryObj.usedJSHeapSize,2);
				this.memory.innerHTML = "MEM: " + this.currentMem;
			}
		}
		this._startTime = time;
		if(this._raf != null) {
			this._raf = this.RAF.apply(window,[$bind(this,this._tick)]);
		}
	}
	,_createDiv: function(id,top) {
		if(top == null) {
			top = 0;
		}
		var div = window.document.createElement("div");
		div.id = id;
		div.className = id;
		div.style.position = "absolute";
		switch(this._pos) {
		case "BL":
			div.style.left = this._offset + "px";
			div.style.bottom = (this._memCheck?48:32) - top + "px";
			break;
		case "BR":
			div.style.right = this._offset + "px";
			div.style.bottom = (this._memCheck?48:32) - top + "px";
			break;
		case "TL":
			div.style.left = this._offset + "px";
			div.style.top = top + "px";
			break;
		case "TR":
			div.style.right = this._offset + "px";
			div.style.top = top + "px";
			break;
		}
		div.style.width = "80px";
		div.style.height = "12px";
		div.style.lineHeight = "12px";
		div.style.padding = "2px";
		div.style.fontFamily = Perf.FONT_FAMILY;
		div.style.fontSize = "9px";
		div.style.fontWeight = "bold";
		div.style.textAlign = "center";
		window.document.body.appendChild(div);
		return div;
	}
	,_createFpsDom: function() {
		this.fps = this._createDiv("fps");
		this.fps.style.backgroundColor = Perf.FPS_BG_CLR;
		this.fps.style.zIndex = "995";
		this.fps.style.color = Perf.FPS_TXT_CLR;
		this.fps.innerHTML = "FPS: 0";
	}
	,_createMsDom: function() {
		this.ms = this._createDiv("ms",16);
		this.ms.style.backgroundColor = Perf.MS_BG_CLR;
		this.ms.style.zIndex = "996";
		this.ms.style.color = Perf.MS_TXT_CLR;
		this.ms.innerHTML = "MS: 0";
	}
	,_createMemoryDom: function() {
		this.memory = this._createDiv("memory",32);
		this.memory.style.backgroundColor = Perf.MEM_BG_CLR;
		this.memory.style.color = Perf.MEM_TXT_CLR;
		this.memory.style.zIndex = "997";
		this.memory.innerHTML = "MEM: 0";
	}
	,_getFormattedSize: function(bytes,frac) {
		if(frac == null) {
			frac = 0;
		}
		var sizes = ["Bytes","KB","MB","GB","TB"];
		if(bytes == 0) {
			return "0";
		}
		var precision = Math.pow(10,frac);
		var i = Math.floor(Math.log(bytes) / Math.log(1024));
		return Math.round(bytes * precision / Math.pow(1024,i)) / precision + " " + sizes[i];
	}
	,addInfo: function(val) {
		this.info = this._createDiv("info",this._memCheck?48:32);
		this.info.style.backgroundColor = Perf.INFO_BG_CLR;
		this.info.style.color = Perf.INFO_TXT_CLR;
		this.info.style.zIndex = "998";
		this.info.innerHTML = val;
	}
	,clearInfo: function() {
		if(this.info != null) {
			window.document.body.removeChild(this.info);
			this.info = null;
		}
	}
	,destroy: function() {
		this.CAF.apply(window,[this._raf]);
		this._raf = null;
		this._perfObj = null;
		this._memoryObj = null;
		if(this.fps != null) {
			window.document.body.removeChild(this.fps);
			this.fps = null;
		}
		if(this.ms != null) {
			window.document.body.removeChild(this.ms);
			this.ms = null;
		}
		if(this.memory != null) {
			window.document.body.removeChild(this.memory);
			this.memory = null;
		}
		this.clearInfo();
		this.currentFps = 60;
		this.currentMs = 0;
		this.currentMem = "0";
		this.lowFps = 60;
		this.avgFps = 60;
		this._measureCount = 0;
		this._totalFps = 0;
		this._time = 0;
		this._ticks = 0;
		this._fpsMin = 60;
		this._fpsMax = 60;
		this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	}
	,_cancelRAF: function() {
		this.CAF.apply(window,[this._raf]);
		this._raf = null;
	}
	,__class__: Perf
};
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var core_AssetLoader = function() {
	PIXI.loaders.Loader.call(this);
	this.count = 0;
	this.pixelRatio = 1;
	this._audioAssets = new haxe_ds_StringMap();
	core_MultipackParser.loader = this;
	this["use"](core_MultipackParser.parse);
};
core_AssetLoader.__name__ = ["core","AssetLoader"];
core_AssetLoader.__super__ = PIXI.loaders.Loader;
core_AssetLoader.prototype = $extend(PIXI.loaders.Loader.prototype,{
	start: function(onComplete,onProgress) {
		this.load(onComplete);
		if(this.progress != null) {
			this.on("progress",onProgress);
		}
	}
	,addAudioAsset: function(id,path,onAssetLoaded) {
		this.addAsset(id,path,false,onAssetLoaded);
	}
	,addAsset: function(id,path,usePixelRatio,onAssetLoaded) {
		if(usePixelRatio == null) {
			usePixelRatio = true;
		}
		if(Reflect.field(this.resources,id) == null) {
			if(path != "") {
				this.add(id,path,{ loadType : this._getLoadtype(path)},onAssetLoaded);
				this.count++;
			}
		}
	}
	,getUrl: function(id) {
		if(Reflect.field(this.resources,id) != null) {
			return Reflect.field(this.resources,id).url;
		} else {
			return null;
		}
	}
	,getJson: function(id) {
		var resource = Reflect.field(this.resources,id);
		if(resource != null && new EReg("(json|text|txt)","i").match(resource.xhrType)) {
			return resource.data;
		}
		return null;
	}
	,getTexture: function(id) {
		var resource = Reflect.field(this.resources,id);
		if(resource != null && resource.texture != null) {
			return resource.texture;
		}
		return null;
	}
	,getTextureFromSpritesheet: function(id,frame) {
		var resource = Reflect.field(this.resources,id);
		if(resource != null && resource.isJson && resource.textures != null) {
			var texture = Reflect.field(resource.textures,frame);
			if(texture != null) {
				return texture;
			}
		}
		return null;
	}
	,exists: function(id) {
		return Reflect.field(this.resources,id) != null;
	}
	,getAudio: function(id) {
		var _this = this._audioAssets;
		if((__map_reserved[id] != null?_this.getReserved(id):_this.h[id]) == null) {
			var value = new core_AudioAsset(Reflect.field(this.resources,id).data);
			var _this1 = this._audioAssets;
			if(__map_reserved[id] != null) {
				_this1.setReserved(id,value);
			} else {
				_this1.h[id] = value;
			}
		}
		var _this2 = this._audioAssets;
		return __map_reserved[id] != null?_this2.getReserved(id):_this2.h[id];
	}
	,getResource: function(id) {
		return Reflect.field(this.resources,id);
	}
	,reset: function() {
		this.removeAllListeners();
		this.count = 0;
		this.resources = { };
		PIXI.loaders.Loader.prototype.reset.call(this);
	}
	,getResoultionPath: function() {
		if(this.resolution != null) {
			return this.resolution + "/";
		} else {
			return "";
		}
	}
	,getPixelRatioPath: function(val) {
		if(val != null) {
			return "scale-" + val + "/";
		} else {
			return "scale-" + this.pixelRatio + "/";
		}
	}
	,set_mute: function(val) {
		var _this = this._audioAssets;
		var tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(tmp.hasNext()) tmp.next().mute = val;
		return this.mute = val;
	}
	,_getLoadtype: function(asset) {
		if(new EReg("(.png|.gif|.svg|.jpg|.jpeg|.bmp)","i").match(asset)) {
			return 2;
		} else if(new EReg("(.mp3|.wav|.ogg|.aac|.m4a|.oga|.webma)","i").match(asset)) {
			return 3;
		} else if(new EReg("(.mp4|.webm|.m3u8)","i").match(asset)) {
			return 4;
		}
		return 1;
	}
	,__class__: core_AssetLoader
});
var core_AudioAsset = function(src) {
	this._src = src;
	this.mute = false;
	this.set_loop(false);
};
core_AudioAsset.__name__ = ["core","AudioAsset"];
core_AudioAsset.prototype = {
	play: function() {
		if(!this.mute) {
			this._src.play();
		}
	}
	,stop: function() {
		this._src.pause();
	}
	,set_loop: function(val) {
		this._src.loop = val;
		return this.loop = val;
	}
	,__class__: core_AudioAsset
};
var core_MultipackParser = function() { };
core_MultipackParser.__name__ = ["core","MultipackParser"];
core_MultipackParser.parse = function(resource,next) {
	var data = resource.data;
	if(data != null && data.multipack) {
		var textures = data.textures;
		var resolution = PIXI.utils.getResolutionOfUrl(resource.url);
		var baseURL = resource.url.split(core_MultipackParser.loader.baseUrl)[1];
		baseURL = baseURL.substring(0,baseURL.lastIndexOf("/") + 1);
		var _g = 0;
		while(_g < textures.length) {
			var texture = [textures[_g]];
			++_g;
			var url = baseURL + texture[0].meta.image;
			var tmp = (function(texture1) {
				return function(image) {
					var frames = texture1[0].frames;
					var _g1 = 0;
					var _g2 = Reflect.fields(frames);
					while(_g1 < _g2.length) {
						var n = _g2[_g1];
						++_g1;
						var frameData = Reflect.field(frames,n);
						var rect = frameData.frame;
						if(rect != null) {
							var size = new PIXI.Rectangle(rect.x,rect.y,rect.w,rect.h);
							var trim = null;
							if(frameData.trimmed) {
								var actualSize = frameData.sourceSize;
								var realSize = frameData.spriteSourceSize;
								trim = new PIXI.Rectangle(realSize.x / resolution,realSize.y / resolution,actualSize.w / resolution,actualSize.h / resolution);
							}
							size.x /= resolution;
							size.y /= resolution;
							size.width /= resolution;
							size.height /= resolution;
							PIXI.Texture.addTextureToCache(new PIXI.Texture(image.texture.baseTexture,size,size.clone(),trim),n);
						}
					}
				};
			})(texture);
			core_MultipackParser.loader.add(texture[0].meta.image,url,{ loadType : 2, crossOrigin : resource.crossOrigin},tmp);
		}
		next();
	} else {
		next();
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var sheep_sheep_race_assets_Assets = function() { };
sheep_sheep_race_assets_Assets.__name__ = ["sheep","sheep","race","assets","Assets"];
sheep_sheep_race_assets_Assets.getTexture = function(prefix) {
	return PIXI.Texture.fromFrame(prefix);
};
sheep_sheep_race_assets_Assets.getTextures = function(list) {
	var textures = [];
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) textures.push(PIXI.Texture.fromFrame(list[_g1++]));
	return textures;
};
var sheep_sheep_race_events_FlowEvent = function() { };
sheep_sheep_race_events_FlowEvent.__name__ = ["sheep","sheep","race","events","FlowEvent"];
var sheep_sheep_race_events_GameEvent = function() { };
sheep_sheep_race_events_GameEvent.__name__ = ["sheep","sheep","race","events","GameEvent"];
var sheep_sheep_race_info_AssetsInfo = function() { };
sheep_sheep_race_info_AssetsInfo.__name__ = ["sheep","sheep","race","info","AssetsInfo"];
var sheep_sheep_race_info_ColorInfo = function() { };
sheep_sheep_race_info_ColorInfo.__name__ = ["sheep","sheep","race","info","ColorInfo"];
var sheep_sheep_race_info_SoundInfo = function() { };
sheep_sheep_race_info_SoundInfo.__name__ = ["sheep","sheep","race","info","SoundInfo"];
var sheep_sheep_race_info_TextInfo = function() { };
sheep_sheep_race_info_TextInfo.__name__ = ["sheep","sheep","race","info","TextInfo"];
var sheep_sheep_race_managers_GameManager = function() {
	this.gameModel = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_models_GameModel);
	this.gameService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_GameService);
};
sheep_sheep_race_managers_GameManager.__name__ = ["sheep","sheep","race","managers","GameManager"];
sheep_sheep_race_managers_GameManager.prototype = {
	updateRace: function() {
		var speeds = [1,2,3,4];
		var speed;
		var _g1 = 0;
		var _g = this.gameModel.distances.length;
		while(_g1 < _g) {
			var i = _g1++;
			speed = speeds[Math.floor(Math.random() * speeds.length)];
			this.gameModel.distances[i] += speed;
			if(this.gameModel.distances[i] >= 500) {
				this.gameModel.addRacePosition(i);
			}
			if(this.gameModel.isTheRaceFinished()) {
				this.gameService.finish();
				return;
			}
		}
	}
	,__class__: sheep_sheep_race_managers_GameManager
};
var sheep_sheep_race_managers_SoundManager = function() {
	this.map = new haxe_ds_StringMap();
	this.loader = new core_AssetLoader();
	this.loader.baseUrl = "assets/sounds/";
	this.loader.addAsset("overworld","music_overworld.mp3",false,null);
	this.loader.addAsset("youLose","sfx_you_lose.mp3",false,null);
	this.loader.addAsset("youWin","sfx_you_win.mp3",false,null);
	this.loader.start($bind(this,this.onLoaded));
};
sheep_sheep_race_managers_SoundManager.__name__ = ["sheep","sheep","race","managers","SoundManager"];
sheep_sheep_race_managers_SoundManager.prototype = {
	onLoaded: function() {
		this.overworld = this.loader.getAudio("overworld");
		this.overworld.set_loop(true);
		this.overworld.play();
		var value = this.loader.getAudio("youLose");
		var _this = this.map;
		if(__map_reserved.youLose != null) {
			_this.setReserved("youLose",value);
		} else {
			_this.h["youLose"] = value;
		}
		var value1 = this.loader.getAudio("youWin");
		var _this1 = this.map;
		if(__map_reserved.youWin != null) {
			_this1.setReserved("youWin",value1);
		} else {
			_this1.h["youWin"] = value1;
		}
	}
	,playSFX: function(key) {
		var _this = this.map;
		if((__map_reserved[key] != null?_this.getReserved(key):_this.h[key]) == null) {
			return;
		}
		var _this1 = this.map;
		(__map_reserved[key] != null?_this1.getReserved(key):_this1.h[key]).play();
	}
	,__class__: sheep_sheep_race_managers_SoundManager
};
var sheep_sheep_race_mvc_AbstractMediator = function(view) {
	this.viewComponent = view;
	this.dispatcher = sheep_sheep_race_mvc_Repository.getInstanceOf(PIXI.Container);
};
sheep_sheep_race_mvc_AbstractMediator.__name__ = ["sheep","sheep","race","mvc","AbstractMediator"];
sheep_sheep_race_mvc_AbstractMediator.prototype = {
	initialize: function() {
	}
	,destroy: function() {
	}
	,addContextListener: function(event,fn) {
		this.dispatcher.on(event,fn);
	}
	,removeContextListener: function(event,fn) {
		this.dispatcher.removeListener(event,fn);
	}
	,dispatcherEvent: function(event) {
		this.dispatcher.emit(event,event);
	}
	,__class__: sheep_sheep_race_mvc_AbstractMediator
};
var sheep_sheep_race_mediators_AlertPopupMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_AlertPopup);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
};
sheep_sheep_race_mediators_AlertPopupMediator.__name__ = ["sheep","sheep","race","mediators","AlertPopupMediator"];
sheep_sheep_race_mediators_AlertPopupMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_AlertPopupMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.view.okButton.addListener("click",$bind(this,this.onOk));
	}
	,onOk: function() {
		this.flowService.removeLastFloatingView();
	}
	,destroy: function() {
		this.view.okButton.removeListener("click",$bind(this,this.onOk));
	}
	,__class__: sheep_sheep_race_mediators_AlertPopupMediator
});
var sheep_sheep_race_mediators_BetFeedbackPopupMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_BetFeedbackPopup);
	this.gameModel = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_models_GameModel);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
	this.soundManager = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_managers_SoundManager);
};
sheep_sheep_race_mediators_BetFeedbackPopupMediator.__name__ = ["sheep","sheep","race","mediators","BetFeedbackPopupMediator"];
sheep_sheep_race_mediators_BetFeedbackPopupMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_BetFeedbackPopupMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.view.createPodium(this.gameModel);
		this.view.homeButton.addListener("click",$bind(this,this.onHome));
		this.view.retryButton.addListener("click",$bind(this,this.onRetry));
		this.count = 0;
		this.timer = new haxe_Timer(200);
		this.timer.run = $bind(this,this.onSfxPlaY);
		this.soundManager.playSFX("youLose");
	}
	,onSfxPlaY: function() {
		if(this.count == 0 && this.gameModel.youWonTheFirstPosition()) {
			this.soundManager.playSFX("youWin");
		} else if(this.count == 0) {
			this.soundManager.playSFX("youLose");
		} else if(this.gameModel.youWonTheLastPosition()) {
			this.soundManager.playSFX("youWin");
		} else {
			this.soundManager.playSFX("youLose");
		}
		this.count += 1;
		if(this.count < 2) {
			return;
		}
		this.timer.stop();
		this.timer = null;
	}
	,onRetry: function() {
		this.flowService.setGameView();
	}
	,onHome: function() {
		this.flowService.setHomeView();
	}
	,destroy: function() {
		this.view.homeButton.removeListener("click",$bind(this,this.onHome));
		this.view.retryButton.removeListener("click",$bind(this,this.onRetry));
	}
	,__class__: sheep_sheep_race_mediators_BetFeedbackPopupMediator
});
var sheep_sheep_race_mediators_BetPopupMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_BetPopup);
	this.gameModel = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_models_GameModel);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
};
sheep_sheep_race_mediators_BetPopupMediator.__name__ = ["sheep","sheep","race","mediators","BetPopupMediator"];
sheep_sheep_race_mediators_BetPopupMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_BetPopupMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.view.startButton.addListener("click",$bind(this,this.onStart));
	}
	,onStart: function() {
		var yourBetToFirstPosition = this.view.sheepSelectorFirst.getCurrentIndex();
		var yourBetToLastPosition = this.view.sheepSelectorLast.getCurrentIndex();
		if(yourBetToFirstPosition == yourBetToLastPosition) {
			this.flowService.addAlertPopup();
			return;
		}
		this.gameModel.yourBetToFirstPosition = yourBetToFirstPosition;
		this.gameModel.yourBetToLastPosition = yourBetToLastPosition;
		this.flowService.removeLastFloatingView();
	}
	,destroy: function() {
		this.view.startButton.removeListener("click",$bind(this,this.onStart));
		this.flowService.addStartingPopup();
	}
	,__class__: sheep_sheep_race_mediators_BetPopupMediator
});
var sheep_sheep_race_mediators_GameViewMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_GameView);
	this.gameModel = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_models_GameModel);
	this.gameManager = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_managers_GameManager);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
};
sheep_sheep_race_mediators_GameViewMediator.__name__ = ["sheep","sheep","race","mediators","GameViewMediator"];
sheep_sheep_race_mediators_GameViewMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_GameViewMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.isActivedLoop = false;
		this.gameModel.clear();
		this.udpatePositions();
		this.view.betButton.addListener("click",$bind(this,this.onClick));
		this.addContextListener("start",$bind(this,this.onGameStart));
		this.addContextListener("finish",$bind(this,this.onGameFinish));
	}
	,onGameFinish: function(e) {
		this.isActivedLoop = false;
		var sheeps = this.view.getSheeps();
		var _g1 = 0;
		var _g = sheeps.length;
		while(_g1 < _g) sheeps[_g1++].stop();
		this.flowService.addBetFeedbackPopup();
	}
	,onGameStart: function(e) {
		this.isActivedLoop = true;
		var sheeps = this.view.getSheeps();
		var _g1 = 0;
		var _g = sheeps.length;
		while(_g1 < _g) sheeps[_g1++].play();
		window.requestAnimationFrame($bind(this,this.onLoop));
	}
	,onLoop: function() {
		if(this.isActivedLoop == false) {
			return;
		}
		window.requestAnimationFrame($bind(this,this.onLoop));
		this.gameManager.updateRace();
		this.udpatePositions();
	}
	,udpatePositions: function() {
		var sheeps = this.view.getSheeps();
		var _g1 = 0;
		var _g = sheeps.length;
		while(_g1 < _g) {
			var i = _g1++;
			sheeps[i].x = this.gameModel.distances[i];
		}
	}
	,onClick: function() {
		this.view.betButton.visible = false;
		this.flowService.addBetPopup();
	}
	,destroy: function() {
		this.view.betButton.removeListener("click",$bind(this,this.onClick));
		this.removeContextListener("start",$bind(this,this.onGameStart));
		this.removeContextListener("finish",$bind(this,this.onGameFinish));
		this.view.removeAllListeners();
	}
	,__class__: sheep_sheep_race_mediators_GameViewMediator
});
var sheep_sheep_race_mediators_HomeViewMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_HomeView);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
};
sheep_sheep_race_mediators_HomeViewMediator.__name__ = ["sheep","sheep","race","mediators","HomeViewMediator"];
sheep_sheep_race_mediators_HomeViewMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_HomeViewMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.view.startButton.addListener("click",$bind(this,this.onClick));
	}
	,onClick: function() {
		this.flowService.setGameView();
	}
	,destroy: function() {
		this.view.startButton.removeListener("click",$bind(this,this.onClick));
		this.view.removeAllListeners();
	}
	,__class__: sheep_sheep_race_mediators_HomeViewMediator
});
var sheep_sheep_race_mediators_IntroViewMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_IntroView);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
};
sheep_sheep_race_mediators_IntroViewMediator.__name__ = ["sheep","sheep","race","mediators","IntroViewMediator"];
sheep_sheep_race_mediators_IntroViewMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_IntroViewMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.timer = new haxe_Timer(2000);
		this.timer.run = $bind(this,this.onTimer);
	}
	,onTimer: function() {
		this.timer.stop();
		this.timer = null;
		this.flowService.setHomeView();
	}
	,__class__: sheep_sheep_race_mediators_IntroViewMediator
});
var sheep_sheep_race_mediators_StartingPopupMediator = function(view) {
	sheep_sheep_race_mvc_AbstractMediator.call(this,view);
	this.view = js_Boot.__cast(this.viewComponent , sheep_sheep_race_views_StartingPopup);
	this.flowService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_FlowService);
	this.gameService = sheep_sheep_race_mvc_Repository.getInstanceOf(sheep_sheep_race_services_GameService);
};
sheep_sheep_race_mediators_StartingPopupMediator.__name__ = ["sheep","sheep","race","mediators","StartingPopupMediator"];
sheep_sheep_race_mediators_StartingPopupMediator.__super__ = sheep_sheep_race_mvc_AbstractMediator;
sheep_sheep_race_mediators_StartingPopupMediator.prototype = $extend(sheep_sheep_race_mvc_AbstractMediator.prototype,{
	initialize: function() {
		this.timer = new haxe_Timer(600);
		this.timer.run = $bind(this,this.onTimer);
		this.count = 3;
	}
	,onTimer: function() {
		this.count -= 1;
		this.view.updateValue(this.count);
		if(this.count > 0) {
			return;
		}
		this.timer.stop();
		this.flowService.removeLastFloatingView();
	}
	,destroy: function() {
		this.gameService.start();
	}
	,__class__: sheep_sheep_race_mediators_StartingPopupMediator
});
var sheep_sheep_race_models_GameModel = function() {
	this.clear();
};
sheep_sheep_race_models_GameModel.__name__ = ["sheep","sheep","race","models","GameModel"];
sheep_sheep_race_models_GameModel.prototype = {
	addRacePosition: function(index) {
		if(this.racePositions.indexOf(index) == -1) {
			this.racePositions.push(index);
		}
	}
	,isTheRaceFinished: function() {
		return this.racePositions.length == this.distances.length;
	}
	,youWonTheFirstPosition: function() {
		return this.racePositions[0] == this.yourBetToFirstPosition;
	}
	,youWonTheLastPosition: function() {
		return this.racePositions[this.distances.length - 1] == this.yourBetToLastPosition;
	}
	,clear: function() {
		this.distances = [0,0,0,0];
		this.racePositions = [];
		this.yourBetToFirstPosition = 0;
		this.yourBetToLastPosition = 0;
	}
	,__class__: sheep_sheep_race_models_GameModel
};
var sheep_sheep_race_mvc_AbstractService = function() {
	this.dispatcher = sheep_sheep_race_mvc_Repository.getInstanceOf(PIXI.Container);
};
sheep_sheep_race_mvc_AbstractService.__name__ = ["sheep","sheep","race","mvc","AbstractService"];
sheep_sheep_race_mvc_AbstractService.prototype = {
	__class__: sheep_sheep_race_mvc_AbstractService
};
var sheep_sheep_race_mvc_FlowManager = function(stage,mediatorMap) {
	this.mediatorMap = mediatorMap;
	this.stage = stage;
	this.viewManager = new sheep_sheep_race_mvc_ViewManager(stage);
	this.mapEvents = new haxe_ds_StringMap();
	stage.on("removeLastFloatingView",$bind(this,this.onRemoveLastFloatingView));
};
sheep_sheep_race_mvc_FlowManager.__name__ = ["sheep","sheep","race","mvc","FlowManager"];
sheep_sheep_race_mvc_FlowManager.prototype = {
	onRemoveLastFloatingView: function() {
		var view = this.viewManager.removeLastFloatingView();
		if(view == null) {
			return;
		}
		this.mediatorMap.unmediate(view);
	}
	,mapSetView: function(event,view) {
		var _this = this.mapEvents;
		if(__map_reserved[event] != null) {
			_this.setReserved(event,view);
		} else {
			_this.h[event] = view;
		}
		this.stage.on(event,$bind(this,this.onSetView));
	}
	,mapAddView: function(event,view) {
		var _this = this.mapEvents;
		if(__map_reserved[event] != null) {
			_this.setReserved(event,view);
		} else {
			_this.h[event] = view;
		}
		this.stage.on(event,$bind(this,this.onAddView));
	}
	,onSetView: function(type) {
		this.mediatorMap.unmediate(this.viewManager.get_currentView());
		var _g1 = 0;
		var _g = this.viewManager.floatingViews.length;
		while(_g1 < _g) this.mediatorMap.unmediate(this.viewManager.floatingViews[_g1++]);
		var _this = this.mapEvents;
		var key = type;
		var viewClass = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		var view = Type.createInstance(viewClass,[]);
		this.viewManager.setView(view);
		this.mediatorMap.mediate(viewClass,view);
	}
	,onAddView: function(type) {
		var _this = this.mapEvents;
		var key = type;
		var viewClass = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		var view = Type.createInstance(viewClass,[]);
		this.viewManager.addView(view);
		this.mediatorMap.mediate(viewClass,view);
	}
	,__class__: sheep_sheep_race_mvc_FlowManager
};
var sheep_sheep_race_mvc_MediatorMap = function() {
	this.mapMediators = new haxe_ds_StringMap();
	this.activedMediators = new haxe_ds_StringMap();
};
sheep_sheep_race_mvc_MediatorMap.__name__ = ["sheep","sheep","race","mvc","MediatorMap"];
sheep_sheep_race_mvc_MediatorMap.prototype = {
	map: function(viewClass,mediatorClass) {
		if(viewClass == null || mediatorClass == null) {
			return;
		}
		var key = Type.getClassName(viewClass);
		var _this = this.mapMediators;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,mediatorClass);
		} else {
			_this.h[key] = mediatorClass;
		}
	}
	,unmap: function(viewClass) {
		if(viewClass == null) {
			return;
		}
		this.mapMediators.remove(Type.getClassName(viewClass));
	}
	,mediate: function(viewClass,view) {
		if(view == null) {
			return;
		}
		var viewClassName = Type.getClassName(viewClass);
		var _this = this.mapMediators;
		var mediatorClass = __map_reserved[viewClassName] != null?_this.getReserved(viewClassName):_this.h[viewClassName];
		if(mediatorClass == null) {
			return;
		}
		var mediator = Type.createInstance(mediatorClass,[view]);
		mediator.initialize();
		var _this1 = this.activedMediators;
		if(__map_reserved[viewClassName] != null) {
			_this1.setReserved(viewClassName,mediator);
		} else {
			_this1.h[viewClassName] = mediator;
		}
	}
	,unmediate: function(view) {
		if(view == null) {
			return;
		}
		var viewClassName = Type.getClassName(view == null?null:js_Boot.getClass(view));
		var _this = this.activedMediators;
		var mediator = __map_reserved[viewClassName] != null?_this.getReserved(viewClassName):_this.h[viewClassName];
		if(mediator == null) {
			return;
		}
		mediator.destroy();
		this.activedMediators.remove(viewClassName);
		mediator = null;
	}
	,__class__: sheep_sheep_race_mvc_MediatorMap
};
var sheep_sheep_race_mvc_Repository = function() {
	this.init();
};
sheep_sheep_race_mvc_Repository.__name__ = ["sheep","sheep","race","mvc","Repository"];
sheep_sheep_race_mvc_Repository.mapAsSingleton = function(clazz) {
	var key = Type.getClassName(clazz);
	var value = Type.createInstance(clazz,[]);
	var _this = sheep_sheep_race_mvc_Repository.instance.map;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,value);
	} else {
		_this.h[key] = value;
	}
};
sheep_sheep_race_mvc_Repository.getInstanceOf = function(clazz) {
	var key = Type.getClassName(clazz);
	var _this = sheep_sheep_race_mvc_Repository.instance.map;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
sheep_sheep_race_mvc_Repository.mapToSingleton = function(object,clazz) {
	var key = Type.getClassName(clazz);
	var _this = sheep_sheep_race_mvc_Repository.instance.map;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,object);
	} else {
		_this.h[key] = object;
	}
};
sheep_sheep_race_mvc_Repository.prototype = {
	init: function() {
		this.map = new haxe_ds_StringMap();
	}
	,__class__: sheep_sheep_race_mvc_Repository
};
var sheep_sheep_race_mvc_ViewManager = function(stage) {
	this.stage = stage;
	this.floatingViews = [];
};
sheep_sheep_race_mvc_ViewManager.__name__ = ["sheep","sheep","race","mvc","ViewManager"];
sheep_sheep_race_mvc_ViewManager.prototype = {
	addView: function(view) {
		if(this.floatingViews.indexOf(view) == -1) {
			this.floatingViews.push(view);
			this.get_stage().addChild(view);
		}
		return view;
	}
	,removeFloatingView: function(view) {
		var index = this.floatingViews.indexOf(view);
		if(index == -1) {
			return;
		}
		this.floatingViews.splice(index,1);
		this.get_stage().removeChild(view);
	}
	,removeLastFloatingView: function() {
		if(this.floatingViews.length == 0) {
			return null;
		}
		var view = this.floatingViews.pop();
		this.get_stage().removeChild(view);
		return view;
	}
	,removeAll: function() {
		var _g1 = 0;
		var _g = this.floatingViews.length;
		while(_g1 < _g) this.removeFloatingView(this.floatingViews[_g1++]);
	}
	,setView: function(view) {
		this.removeCurrentView();
		this.currentView = view;
		var tmp = this.get_currentView();
		this.get_stage().addChild(tmp);
		return this.get_currentView();
	}
	,removeCurrentView: function() {
		if(this.get_stage() != null && this.get_currentView() != null) {
			var tmp = this.get_currentView();
			this.get_stage().removeChild(tmp);
		}
	}
	,get_stage: function() {
		return this.stage;
	}
	,get_currentView: function() {
		return this.currentView;
	}
	,__class__: sheep_sheep_race_mvc_ViewManager
};
var sheep_sheep_race_services_FlowService = function() {
	sheep_sheep_race_mvc_AbstractService.call(this);
};
sheep_sheep_race_services_FlowService.__name__ = ["sheep","sheep","race","services","FlowService"];
sheep_sheep_race_services_FlowService.__super__ = sheep_sheep_race_mvc_AbstractService;
sheep_sheep_race_services_FlowService.prototype = $extend(sheep_sheep_race_mvc_AbstractService.prototype,{
	dispatcherEvent: function(event) {
		this.dispatcher.emit(event,event);
	}
	,setHomeView: function() {
		this.dispatcherEvent("showHome");
	}
	,setGameView: function() {
		this.dispatcherEvent("showGame");
	}
	,addBetPopup: function() {
		this.dispatcherEvent("addBetPopup");
	}
	,addBetFeedbackPopup: function() {
		this.dispatcherEvent("addBetFeedbackPopup");
	}
	,addStartingPopup: function() {
		this.dispatcherEvent("addStartingPopup");
	}
	,addAlertPopup: function() {
		this.dispatcherEvent("addAlertPopup");
	}
	,removeLastFloatingView: function() {
		this.dispatcherEvent("removeLastFloatingView");
	}
	,__class__: sheep_sheep_race_services_FlowService
});
var sheep_sheep_race_services_GameService = function() {
	sheep_sheep_race_mvc_AbstractService.call(this);
};
sheep_sheep_race_services_GameService.__name__ = ["sheep","sheep","race","services","GameService"];
sheep_sheep_race_services_GameService.__super__ = sheep_sheep_race_mvc_AbstractService;
sheep_sheep_race_services_GameService.prototype = $extend(sheep_sheep_race_mvc_AbstractService.prototype,{
	dispatcherEvent: function(event) {
		this.dispatcher.emit(event,event);
	}
	,finish: function() {
		this.dispatcherEvent("finish");
	}
	,start: function() {
		this.dispatcherEvent("start");
	}
	,__class__: sheep_sheep_race_services_GameService
});
var sheep_sheep_race_setup_ContextConfig = function(stage) {
	this.stage = stage;
	sheep_sheep_race_mvc_Repository.mapToSingleton(stage,PIXI.Container);
	sheep_sheep_race_mvc_Repository.mapAsSingleton(sheep_sheep_race_models_GameModel);
	sheep_sheep_race_mvc_Repository.mapAsSingleton(sheep_sheep_race_services_GameService);
	sheep_sheep_race_mvc_Repository.mapAsSingleton(sheep_sheep_race_services_FlowService);
	sheep_sheep_race_mvc_Repository.mapAsSingleton(sheep_sheep_race_managers_SoundManager);
	sheep_sheep_race_mvc_Repository.mapAsSingleton(sheep_sheep_race_managers_GameManager);
	this.mediatorMap = new sheep_sheep_race_mvc_MediatorMap();
	this.mediatorMap.map(sheep_sheep_race_views_IntroView,sheep_sheep_race_mediators_IntroViewMediator);
	this.mediatorMap.map(sheep_sheep_race_views_HomeView,sheep_sheep_race_mediators_HomeViewMediator);
	this.mediatorMap.map(sheep_sheep_race_views_GameView,sheep_sheep_race_mediators_GameViewMediator);
	this.mediatorMap.map(sheep_sheep_race_views_AlertPopup,sheep_sheep_race_mediators_AlertPopupMediator);
	this.mediatorMap.map(sheep_sheep_race_views_BetPopup,sheep_sheep_race_mediators_BetPopupMediator);
	this.mediatorMap.map(sheep_sheep_race_views_BetFeedbackPopup,sheep_sheep_race_mediators_BetFeedbackPopupMediator);
	this.mediatorMap.map(sheep_sheep_race_views_StartingPopup,sheep_sheep_race_mediators_StartingPopupMediator);
	this.flowManager = new sheep_sheep_race_mvc_FlowManager(stage,this.mediatorMap);
	this.flowManager.mapSetView("showIntro",sheep_sheep_race_views_IntroView);
	this.flowManager.mapSetView("showHome",sheep_sheep_race_views_HomeView);
	this.flowManager.mapSetView("showGame",sheep_sheep_race_views_GameView);
	this.flowManager.mapAddView("addAlertPopup",sheep_sheep_race_views_AlertPopup);
	this.flowManager.mapAddView("addBetPopup",sheep_sheep_race_views_BetPopup);
	this.flowManager.mapAddView("addBetFeedbackPopup",sheep_sheep_race_views_BetFeedbackPopup);
	this.flowManager.mapAddView("addStartingPopup",sheep_sheep_race_views_StartingPopup);
	this.init();
};
sheep_sheep_race_setup_ContextConfig.__name__ = ["sheep","sheep","race","setup","ContextConfig"];
sheep_sheep_race_setup_ContextConfig.prototype = {
	init: function() {
		this.stage.emit("showIntro","showIntro");
	}
	,__class__: sheep_sheep_race_setup_ContextConfig
};
var sheep_sheep_race_utils_SpriteFactory = function() { };
sheep_sheep_race_utils_SpriteFactory.__name__ = ["sheep","sheep","race","utils","SpriteFactory"];
sheep_sheep_race_utils_SpriteFactory.getBitmapText = function(text) {
	if(text == null) {
		text = "";
	}
	return new PIXI.extras.BitmapText(text,{ font : "20px SetzerPixelFont", align : "center"});
};
sheep_sheep_race_utils_SpriteFactory.getSprite = function(assetsKey,alignCenter) {
	if(alignCenter == null) {
		alignCenter = false;
	}
	var img = new PIXI.Sprite(PIXI.Texture.fromFrame(assetsKey));
	if(alignCenter) {
		img.anchor.set(0.5);
	}
	return img;
};
sheep_sheep_race_utils_SpriteFactory.getEmptyContainer = function() {
	return new PIXI.Container();
};
sheep_sheep_race_utils_SpriteFactory.getMovieClip = function(assetsKeys) {
	var textures = [];
	var _g1 = 0;
	var _g = assetsKeys.length;
	while(_g1 < _g) textures.push(PIXI.Texture.fromFrame(assetsKeys[_g1++]));
	var movieclip = new PIXI.extras.MovieClip(textures);
	movieclip.animationSpeed = 0.15;
	movieclip.stop();
	return movieclip;
};
sheep_sheep_race_utils_SpriteFactory.getColorBox = function(width,height,color,alpha) {
	if(alpha == null) {
		alpha = 1.0;
	}
	if(color == null) {
		color = 16711680;
	}
	var background = new PIXI.Graphics();
	background.beginFill(color,alpha);
	background.drawRect(0,0,width,height);
	background.endFill();
	return background;
};
sheep_sheep_race_utils_SpriteFactory.getBackgroundColor = function(color,alpha) {
	if(alpha == null) {
		alpha = 1.0;
	}
	if(color == null) {
		color = 16711680;
	}
	return sheep_sheep_race_utils_SpriteFactory.getColorBox(640,480,color,alpha);
};
sheep_sheep_race_utils_SpriteFactory.getShadowBackground = function() {
	return sheep_sheep_race_utils_SpriteFactory.getBackgroundColor(0,0.7);
};
sheep_sheep_race_utils_SpriteFactory.getBasicButton = function(text) {
	var img = new sheep_sheep_race_views_components_Button(text,PIXI.Texture.fromFrame("button_up.png"));
	img.anchor.set(0.5);
	return img;
};
sheep_sheep_race_utils_SpriteFactory.getArrowButton = function(direction) {
	if(direction == null) {
		direction = "right";
	}
	var img = new sheep_sheep_race_views_components_Button("",PIXI.Texture.fromFrame("button_arrow_up.png"));
	img.anchor.set(0.5);
	img.setDirection(direction);
	return img;
};
var sheep_sheep_race_utils_ViewPort = function() { };
sheep_sheep_race_utils_ViewPort.__name__ = ["sheep","sheep","race","utils","ViewPort"];
sheep_sheep_race_utils_ViewPort.alignCenter = function(object) {
	object.position.set(320,240);
};
var sheep_sheep_race_views_AlertPopup = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getShadowBackground());
	var container = sheep_sheep_race_utils_SpriteFactory.getEmptyContainer();
	container.x = 320;
	container.y = 96.;
	this.addChild(container);
	container.addChild(sheep_sheep_race_utils_SpriteFactory.getColorBox(352.,336.,14596231));
	var titleBackground = sheep_sheep_race_utils_SpriteFactory.getColorBox(320,30,13468991);
	titleBackground.x = 15;
	titleBackground.y = 15;
	container.addChild(titleBackground);
	var title = sheep_sheep_race_utils_SpriteFactory.getBitmapText("ALERT !!");
	title.x = container.width * 0.5;
	title.y = 22;
	title.pivot.x = title.width * 0.5;
	container.addChild(title);
	var msg = sheep_sheep_race_utils_SpriteFactory.getBitmapText("IT IS NOT ALLOWED \nTO SELECT TWO \nIDENTICAL SHEEP TO \nDIFFERENT BETS");
	msg.x = container.width * 0.5;
	msg.y = container.width * 0.35;
	msg.pivot.x = msg.width * 0.5;
	container.addChild(msg);
	this.okButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("OK");
	this.okButton.x = container.width * 0.5;
	this.okButton.y = container.height * 0.85;
	container.addChild(this.okButton);
	container.pivot.set(container.width * 0.5,0);
};
sheep_sheep_race_views_AlertPopup.__name__ = ["sheep","sheep","race","views","AlertPopup"];
sheep_sheep_race_views_AlertPopup.__super__ = PIXI.Container;
sheep_sheep_race_views_AlertPopup.prototype = $extend(PIXI.Container.prototype,{
	__class__: sheep_sheep_race_views_AlertPopup
});
var sheep_sheep_race_views_BetFeedbackPopup = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getShadowBackground());
	this.container = sheep_sheep_race_utils_SpriteFactory.getEmptyContainer();
	this.container.x = 320;
	this.container.y = 96.;
	this.addChild(this.container);
	this.container.addChild(sheep_sheep_race_utils_SpriteFactory.getColorBox(352.,336.,14596231));
	var titleBackground = sheep_sheep_race_utils_SpriteFactory.getColorBox(320,30,13468991);
	titleBackground.x = 15;
	titleBackground.y = 15;
	this.container.addChild(titleBackground);
	var title = sheep_sheep_race_utils_SpriteFactory.getBitmapText("FINAL POSITIONS");
	title.x = this.container.width * 0.5;
	title.y = 22;
	title.pivot.x = title.width * 0.5;
	this.container.addChild(title);
	this.retryButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("RETRY");
	this.retryButton.x = this.container.width * 0.5 - 50;
	this.retryButton.y = this.container.height * 0.85;
	this.container.addChild(this.retryButton);
	this.homeButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("HOME");
	this.homeButton.x = this.container.width * 0.5 + 50;
	this.homeButton.y = this.container.height * 0.85;
	this.container.addChild(this.homeButton);
	this.container.pivot.set(this.container.width * 0.5,0);
};
sheep_sheep_race_views_BetFeedbackPopup.__name__ = ["sheep","sheep","race","views","BetFeedbackPopup"];
sheep_sheep_race_views_BetFeedbackPopup.__super__ = PIXI.Container;
sheep_sheep_race_views_BetFeedbackPopup.prototype = $extend(PIXI.Container.prototype,{
	createPodium: function(gameModel) {
		var sheeps = [sheep_sheep_race_info_AssetsInfo.SHEEP_01,sheep_sheep_race_info_AssetsInfo.SHEEP_02,sheep_sheep_race_info_AssetsInfo.SHEEP_03,sheep_sheep_race_info_AssetsInfo.SHEEP_04];
		var sheep1;
		var lastIndex = gameModel.racePositions.length - 1;
		var _g1 = 0;
		var _g = sheeps.length;
		while(_g1 < _g) {
			var i = _g1++;
			sheep1 = new sheep_sheep_race_views_components_SheepPodium(sheeps[gameModel.racePositions[i]],sheep_sheep_race_info_TextInfo.POSITIONS[i]);
			sheep1.x = 105 + 70 * i;
			sheep1.y = 125;
			this.container.addChild(sheep1);
			if(i == 0) {
				this.setWinnerLooser(gameModel.youWonTheFirstPosition(),sheep1);
			}
			if(i == lastIndex) {
				this.setWinnerLooser(gameModel.youWonTheLastPosition(),sheep1);
			}
		}
		var info = sheep_sheep_race_utils_SpriteFactory.getBitmapText("YOUR BETS");
		info.x = this.container.width * 0.5;
		info.y = 165;
		info.pivot.x = info.width * 0.5;
		this.container.addChild(info);
		var firstPosition = sheep_sheep_race_utils_SpriteFactory.getBitmapText("1 ST : " + this.getWinLoseText(gameModel.youWonTheFirstPosition()));
		firstPosition.x = this.container.width * 0.5;
		firstPosition.y = 195;
		firstPosition.pivot.x = firstPosition.width * 0.5;
		this.container.addChild(firstPosition);
		var lastPosition = sheep_sheep_race_utils_SpriteFactory.getBitmapText("4 TH : " + this.getWinLoseText(gameModel.youWonTheLastPosition()));
		lastPosition.x = this.container.width * 0.5;
		lastPosition.y = 220;
		lastPosition.pivot.x = lastPosition.width * 0.5;
		this.container.addChild(lastPosition);
	}
	,setWinnerLooser: function(value,sheep1) {
		if(value == true) {
			sheep1.winner();
		} else {
			sheep1.looser();
		}
	}
	,getWinLoseText: function(value) {
		if(value == true) {
			return "YOU WIN !!";
		} else {
			return "YOU LOSE !!";
		}
	}
	,__class__: sheep_sheep_race_views_BetFeedbackPopup
});
var sheep_sheep_race_views_BetPopup = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getShadowBackground());
	var container = sheep_sheep_race_utils_SpriteFactory.getEmptyContainer();
	container.x = 320;
	container.y = 96.;
	this.addChild(container);
	container.addChild(sheep_sheep_race_utils_SpriteFactory.getColorBox(352.,336.,14596231));
	var titleBackground = sheep_sheep_race_utils_SpriteFactory.getColorBox(320,30,13468991);
	titleBackground.x = 15;
	titleBackground.y = 15;
	container.addChild(titleBackground);
	var title = sheep_sheep_race_utils_SpriteFactory.getBitmapText("BET ON THE POSITIONS !!");
	title.x = container.width * 0.5;
	title.y = 22;
	title.pivot.x = title.width * 0.5;
	container.addChild(title);
	this.sheepSelectorFirst = new sheep_sheep_race_views_components_SheepSelector("FIRST\nPOSITION");
	this.sheepSelectorFirst.x = container.width * 0.5 - 70;
	this.sheepSelectorFirst.y = container.height * 0.5 - 20;
	container.addChild(this.sheepSelectorFirst);
	this.sheepSelectorLast = new sheep_sheep_race_views_components_SheepSelector("LAST\nPOSITION");
	this.sheepSelectorLast.x = container.width * 0.5 + 70;
	this.sheepSelectorLast.y = container.height * 0.5 - 20;
	this.sheepSelectorLast.back();
	container.addChild(this.sheepSelectorLast);
	this.startButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("START");
	this.startButton.x = container.width * 0.5;
	this.startButton.y = container.height * 0.85;
	container.addChild(this.startButton);
	container.pivot.set(container.width * 0.5,0);
};
sheep_sheep_race_views_BetPopup.__name__ = ["sheep","sheep","race","views","BetPopup"];
sheep_sheep_race_views_BetPopup.__super__ = PIXI.Container;
sheep_sheep_race_views_BetPopup.prototype = $extend(PIXI.Container.prototype,{
	__class__: sheep_sheep_race_views_BetPopup
});
var sheep_sheep_race_views_GameView = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getBackgroundColor(3655644));
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getSprite("background_game.png"));
	var raceContent = sheep_sheep_race_utils_SpriteFactory.getEmptyContainer();
	raceContent.x = 50;
	raceContent.y = 200;
	this.addChild(raceContent);
	var startMark = sheep_sheep_race_utils_SpriteFactory.getSprite("start_mark.png");
	startMark.x = 35;
	startMark.y = 20;
	raceContent.addChild(startMark);
	var finishMark = sheep_sheep_race_utils_SpriteFactory.getSprite("finish_mark.png");
	finishMark.x = 500;
	finishMark.y = 20;
	raceContent.addChild(finishMark);
	this.sheeps = [sheep_sheep_race_utils_SpriteFactory.getMovieClip(sheep_sheep_race_info_AssetsInfo.SHEEP_01),sheep_sheep_race_utils_SpriteFactory.getMovieClip(sheep_sheep_race_info_AssetsInfo.SHEEP_02),sheep_sheep_race_utils_SpriteFactory.getMovieClip(sheep_sheep_race_info_AssetsInfo.SHEEP_03),sheep_sheep_race_utils_SpriteFactory.getMovieClip(sheep_sheep_race_info_AssetsInfo.SHEEP_04)];
	var _g1 = 0;
	var _g = this.sheeps.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.sheeps[i].pivot.x = this.sheeps[i].width * .5;
		this.sheeps[i].y = i * 45;
		this.sheeps[i].stop();
		raceContent.addChild(this.sheeps[i]);
	}
	this.betButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("BET");
	this.betButton.x = 320;
	this.betButton.y = 432.;
	this.addChild(this.betButton);
};
sheep_sheep_race_views_GameView.__name__ = ["sheep","sheep","race","views","GameView"];
sheep_sheep_race_views_GameView.__super__ = PIXI.Container;
sheep_sheep_race_views_GameView.prototype = $extend(PIXI.Container.prototype,{
	getSheeps: function() {
		return this.sheeps;
	}
	,__class__: sheep_sheep_race_views_GameView
});
var sheep_sheep_race_views_HomeView = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getBackgroundColor(3655644));
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getSprite("background_game.png"));
	var logo = sheep_sheep_race_utils_SpriteFactory.getSprite("sheep_logo.png",true);
	logo.x = 320;
	logo.y = 144.;
	this.addChild(logo);
	this.startButton = sheep_sheep_race_utils_SpriteFactory.getBasicButton("START");
	this.startButton.x = 320;
	this.startButton.y = 432.;
	this.addChild(this.startButton);
};
sheep_sheep_race_views_HomeView.__name__ = ["sheep","sheep","race","views","HomeView"];
sheep_sheep_race_views_HomeView.__super__ = PIXI.Container;
sheep_sheep_race_views_HomeView.prototype = $extend(PIXI.Container.prototype,{
	__class__: sheep_sheep_race_views_HomeView
});
var sheep_sheep_race_views_IntroView = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getBackgroundColor(3655644));
	var text = sheep_sheep_race_utils_SpriteFactory.getBitmapText("RONALDO SANTIAGO");
	text.pivot.set(text.width * 0.5,text.height * 0.5);
	sheep_sheep_race_utils_ViewPort.alignCenter(text);
	this.addChild(text);
};
sheep_sheep_race_views_IntroView.__name__ = ["sheep","sheep","race","views","IntroView"];
sheep_sheep_race_views_IntroView.__super__ = PIXI.Container;
sheep_sheep_race_views_IntroView.prototype = $extend(PIXI.Container.prototype,{
	__class__: sheep_sheep_race_views_IntroView
});
var sheep_sheep_race_views_StartingPopup = function() {
	PIXI.Container.call(this);
	this.addChild(sheep_sheep_race_utils_SpriteFactory.getShadowBackground());
	var starling = sheep_sheep_race_utils_SpriteFactory.getBitmapText("STARTING");
	starling.x = 320;
	starling.y = 220;
	starling.pivot.x = starling.width * .5;
	this.addChild(starling);
	this.countingText = sheep_sheep_race_utils_SpriteFactory.getBitmapText("3");
	this.countingText.x = 320;
	this.countingText.y = 260;
	this.countingText.pivot.x = this.countingText.width * .5;
	this.addChild(this.countingText);
};
sheep_sheep_race_views_StartingPopup.__name__ = ["sheep","sheep","race","views","StartingPopup"];
sheep_sheep_race_views_StartingPopup.__super__ = PIXI.Container;
sheep_sheep_race_views_StartingPopup.prototype = $extend(PIXI.Container.prototype,{
	updateValue: function(count) {
		this.countingText.text = count == null?"null":"" + count;
	}
	,__class__: sheep_sheep_race_views_StartingPopup
});
var sheep_sheep_race_views_components_Button = function(text,texture) {
	PIXI.Sprite.call(this,texture);
	this.buttonMode = true;
	this.interactive = true;
	this.isdown = false;
	this.setDirection("right");
	if(text != "") {
		var txt = sheep_sheep_race_utils_SpriteFactory.getBitmapText(text);
		txt.pivot.set(txt.width * 0.5,txt.height * 0.5);
		this.addChild(txt);
	}
	this.on("mousedown",$bind(this,this.onButtonDown));
	this.on("touchstart",$bind(this,this.onButtonDown));
	this.on("mouseup",$bind(this,this.onButtonUp));
	this.on("touchend",$bind(this,this.onButtonUp));
};
sheep_sheep_race_views_components_Button.__name__ = ["sheep","sheep","race","views","components","Button"];
sheep_sheep_race_views_components_Button.__super__ = PIXI.Sprite;
sheep_sheep_race_views_components_Button.prototype = $extend(PIXI.Sprite.prototype,{
	onButtonDown: function() {
		this.isdown = true;
		this.scale.set(0.95 * this.direction,0.95);
	}
	,onButtonUp: function() {
		this.isdown = false;
		this.scale.set(this.direction,1);
	}
	,setDirection: function(value) {
		this.direction = 1;
		if(value == "left") {
			this.direction = -1;
		}
		this.scale.set(this.direction,1);
	}
	,__class__: sheep_sheep_race_views_components_Button
});
var sheep_sheep_race_views_components_SheepPodium = function(assetskeys,positionText) {
	PIXI.Container.call(this);
	var backgroundBorder = sheep_sheep_race_utils_SpriteFactory.getColorBox(68,68,0);
	backgroundBorder.pivot.x = backgroundBorder.width * .5;
	backgroundBorder.pivot.y = backgroundBorder.height * .5;
	this.addChild(backgroundBorder);
	this.background = this.createBoxColor(13403648);
	this.addChild(this.background);
	this.sheep = sheep_sheep_race_utils_SpriteFactory.getMovieClip(assetskeys);
	this.sheep.scale.x = -1;
	this.sheep.pivot.x = this.sheep.width * .5;
	this.sheep.pivot.y = this.sheep.height * .5;
	this.addChild(this.sheep);
	this.pivot.x = this.width * .5;
	this.pivot.y = this.height * .5;
	var currentPositionText = sheep_sheep_race_utils_SpriteFactory.getBitmapText(positionText);
	currentPositionText.pivot.x = currentPositionText.width * .5;
	currentPositionText.pivot.y = currentPositionText.height * .5;
	currentPositionText.y = 50;
	this.addChild(currentPositionText);
};
sheep_sheep_race_views_components_SheepPodium.__name__ = ["sheep","sheep","race","views","components","SheepPodium"];
sheep_sheep_race_views_components_SheepPodium.__super__ = PIXI.Container;
sheep_sheep_race_views_components_SheepPodium.prototype = $extend(PIXI.Container.prototype,{
	createBoxColor: function(color) {
		var box = sheep_sheep_race_utils_SpriteFactory.getColorBox(64,64,color);
		box.pivot.x = box.width * .5;
		box.pivot.y = box.height * .5;
		return box;
	}
	,winner: function() {
		this.sheep.play();
		this.removeChild(this.background);
		this.background = null;
		this.background = this.createBoxColor(8827908);
		this.addChildAt(this.background,1);
	}
	,looser: function() {
		this.removeChild(this.background);
		this.background = null;
		this.background = this.createBoxColor(9046024);
		this.addChildAt(this.background,1);
	}
	,__class__: sheep_sheep_race_views_components_SheepPodium
});
var sheep_sheep_race_views_components_SheepSelector = function(label) {
	PIXI.Container.call(this);
	this.indexes = [0,1,2,3];
	var background1 = sheep_sheep_race_utils_SpriteFactory.getColorBox(86,72,0);
	background1.pivot.x = background1.width * 0.5;
	background1.pivot.y = background1.height * 0.5;
	this.addChild(background1);
	var background2 = sheep_sheep_race_utils_SpriteFactory.getColorBox(82,68,16777215);
	background2.pivot.x = background2.width * 0.5;
	background2.pivot.y = background2.height * 0.5;
	this.addChild(background2);
	this.image = sheep_sheep_race_utils_SpriteFactory.getSprite(sheep_sheep_race_info_AssetsInfo.SHEEPS_SELECTOR[0]);
	this.image.pivot.x = this.image.width * 0.5;
	this.image.pivot.y = this.image.height * 0.5;
	this.addChild(this.image);
	var text = sheep_sheep_race_utils_SpriteFactory.getBitmapText(label);
	text.pivot.x = text.width * 0.5;
	text.y = -75;
	this.addChild(text);
	var backButton = sheep_sheep_race_utils_SpriteFactory.getArrowButton("left");
	backButton.x = -22;
	backButton.y = 60;
	this.addChild(backButton);
	var nextButton = sheep_sheep_race_utils_SpriteFactory.getArrowButton("right");
	nextButton.x = 22;
	nextButton.y = 60;
	this.addChild(nextButton);
	backButton.on("click",$bind(this,this.back));
	nextButton.on("click",$bind(this,this.next));
};
sheep_sheep_race_views_components_SheepSelector.__name__ = ["sheep","sheep","race","views","components","SheepSelector"];
sheep_sheep_race_views_components_SheepSelector.__super__ = PIXI.Container;
sheep_sheep_race_views_components_SheepSelector.prototype = $extend(PIXI.Container.prototype,{
	updateImage: function(index) {
		this.image.texture = PIXI.Texture.fromFrame(sheep_sheep_race_info_AssetsInfo.SHEEPS_SELECTOR[index]);
	}
	,next: function() {
		this.indexes.push(this.indexes.shift());
		this.updateImage(this.indexes[0]);
	}
	,back: function() {
		this.indexes.unshift(this.indexes.pop());
		this.updateImage(this.indexes[0]);
	}
	,getCurrentIndex: function() {
		return this.indexes[0];
	}
	,__class__: sheep_sheep_race_views_components_SheepSelector
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
pixi_plugins_app_Application.AUTO = "auto";
pixi_plugins_app_Application.RECOMMENDED = "recommended";
pixi_plugins_app_Application.CANVAS = "canvas";
pixi_plugins_app_Application.WEBGL = "webgl";
Perf.MEASUREMENT_INTERVAL = 1000;
Perf.FONT_FAMILY = "Helvetica,Arial";
Perf.FPS_BG_CLR = "#00FF00";
Perf.FPS_WARN_BG_CLR = "#FF8000";
Perf.FPS_PROB_BG_CLR = "#FF0000";
Perf.MS_BG_CLR = "#FFFF00";
Perf.MEM_BG_CLR = "#086A87";
Perf.INFO_BG_CLR = "#00FFFF";
Perf.FPS_TXT_CLR = "#000000";
Perf.MS_TXT_CLR = "#000000";
Perf.MEM_TXT_CLR = "#FFFFFF";
Perf.INFO_TXT_CLR = "#000000";
Perf.TOP_LEFT = "TL";
Perf.TOP_RIGHT = "TR";
Perf.BOTTOM_LEFT = "BL";
Perf.BOTTOM_RIGHT = "BR";
Perf.DELAY_TIME = 4000;
core_AssetLoader.__meta__ = { fields : { getJson : { SuppressWarnings : ["checkstyle:Dynamic"]}}};
js_Boot.__toStr = { }.toString;
sheep_sheep_race_events_FlowEvent.SHOW_HOME = "showHome";
sheep_sheep_race_events_FlowEvent.SHOW_GAME = "showGame";
sheep_sheep_race_events_FlowEvent.SHOW_INTRO = "showIntro";
sheep_sheep_race_events_FlowEvent.ADD_BET_POPUP = "addBetPopup";
sheep_sheep_race_events_FlowEvent.ADD_ALERT_POPUP = "addAlertPopup";
sheep_sheep_race_events_FlowEvent.ADD_BET_FEEDBACK_POPUP = "addBetFeedbackPopup";
sheep_sheep_race_events_FlowEvent.ADD_STARTING_POPUP = "addStartingPopup";
sheep_sheep_race_events_FlowEvent.REMOVE_LAST_FLOATING_VIEW = "removeLastFloatingView";
sheep_sheep_race_events_GameEvent.START = "start";
sheep_sheep_race_events_GameEvent.FINISH = "finish";
sheep_sheep_race_info_AssetsInfo.FONT = "20px SetzerPixelFont";
sheep_sheep_race_info_AssetsInfo.SHEEP_LOGO = "sheep_logo.png";
sheep_sheep_race_info_AssetsInfo.BACKGROUND_GAME = "background_game.png";
sheep_sheep_race_info_AssetsInfo.BASIC_BUTTON = "button_up.png";
sheep_sheep_race_info_AssetsInfo.ARROW_BUTTON = "button_arrow_up.png";
sheep_sheep_race_info_AssetsInfo.START_MARK = "start_mark.png";
sheep_sheep_race_info_AssetsInfo.FINISH_MARK = "finish_mark.png";
sheep_sheep_race_info_AssetsInfo.SHEEP_01 = ["basic_sheep_01.png","basic_sheep_02.png","basic_sheep_03.png","basic_sheep_04.png"];
sheep_sheep_race_info_AssetsInfo.SHEEP_02 = ["basic_f_sheep_01.png","basic_f_sheep_02.png","basic_f_sheep_03.png","basic_f_sheep_04.png"];
sheep_sheep_race_info_AssetsInfo.SHEEP_03 = ["brown_sheep_01.png","brown_sheep_02.png","brown_sheep_03.png","brown_sheep_04.png"];
sheep_sheep_race_info_AssetsInfo.SHEEP_04 = ["dolly_sheep_01.png","dolly_sheep_02.png","dolly_sheep_03.png","dolly_sheep_04.png"];
sheep_sheep_race_info_AssetsInfo.SHEEPS_SELECTOR = ["basic_sheep_01.png","basic_f_sheep_01.png","brown_sheep_01.png","dolly_sheep_01.png"];
sheep_sheep_race_info_ColorInfo.BACKGROUND_SKY = 3655644;
sheep_sheep_race_info_ColorInfo.BACKGROUND_TITLE = 13468991;
sheep_sheep_race_info_ColorInfo.BACKGROUND_POPUP = 14596231;
sheep_sheep_race_info_ColorInfo.GREEN = 8827908;
sheep_sheep_race_info_ColorInfo.RED = 9046024;
sheep_sheep_race_info_ColorInfo.YELLOW = 13403648;
sheep_sheep_race_info_SoundInfo.OVERWORLD = "overworld";
sheep_sheep_race_info_SoundInfo.YOU_LOSE = "youLose";
sheep_sheep_race_info_SoundInfo.YOU_WIN = "youWin";
sheep_sheep_race_info_TextInfo.DEVELOPER = "RONALDO SANTIAGO";
sheep_sheep_race_info_TextInfo.BUTTON_START = "START";
sheep_sheep_race_info_TextInfo.BUTTON_BET = "BET";
sheep_sheep_race_info_TextInfo.BUTTON_OK = "OK";
sheep_sheep_race_info_TextInfo.BUTTON_RETRY = "RETRY";
sheep_sheep_race_info_TextInfo.BUTTON_HOME = "HOME";
sheep_sheep_race_info_TextInfo.LEFT = "left";
sheep_sheep_race_info_TextInfo.RIGHT = "right";
sheep_sheep_race_info_TextInfo.TITLE_BET = "BET ON THE POSITIONS !!";
sheep_sheep_race_info_TextInfo.TITLE_FEEDBACK = "FINAL POSITIONS";
sheep_sheep_race_info_TextInfo.TITLE_ALERT = "ALERT !!";
sheep_sheep_race_info_TextInfo.FIRST_POSITION = "FIRST\nPOSITION";
sheep_sheep_race_info_TextInfo.LAST_POSITION = "LAST\nPOSITION";
sheep_sheep_race_info_TextInfo.POSITIONS = ["1 ST","2 ND","3 RD","4 TH"];
sheep_sheep_race_info_TextInfo.YOU_WIN = "YOU WIN !!";
sheep_sheep_race_info_TextInfo.YOU_LOSE = "YOU LOSE !!";
sheep_sheep_race_info_TextInfo.YOUR_BETS = "YOUR BETS";
sheep_sheep_race_info_TextInfo.BET_MISTAKE = "IT IS NOT ALLOWED \nTO SELECT TWO \nIDENTICAL SHEEP TO \nDIFFERENT BETS";
sheep_sheep_race_info_TextInfo.STARTING = "STARTING";
sheep_sheep_race_mvc_Repository.instance = new sheep_sheep_race_mvc_Repository();
sheep_sheep_race_utils_ViewPort.MAX_WIDTH = 640;
sheep_sheep_race_utils_ViewPort.MAX_HEIGHT = 480;
sheep_sheep_race_utils_ViewPort.HALF_WIDTH = 320;
sheep_sheep_race_utils_ViewPort.HALF_HEIGHT = 240;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
